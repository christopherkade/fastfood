{"version":3,"sources":["components/Atoms/Title/Title.js","components/Molecules/IntroCard/IntroCard.js","components/Organisms/IntroLayout/IntroLayout.js","hooks/useWebsockets.js","components/Atoms/EmojiSelector/EmojiSelector.js","components/Molecules/EmojiLayout/EmojiLayout.js","components/Atoms/Link/Link.js","components/Atoms/Button/Button.js","components/Molecules/CompareModal/CompareModal.js","components/Atoms/Notification/Notification.js","components/Organisms/MainLayout/MainLayout.js","App.js","serviceWorker.js","index.js"],"names":["Title","styled","h1","_templateObject","props","size","color","CardWrapper","div","IntroCard_templateObject","CardSubtitle","p","_templateObject2","CardTwitter","_templateObject3","StartButton","button","_templateObject4","IntroCard","_ref","onClick","react_default","a","createElement","Title_Title","href","Wrapper","IntroLayout_templateObject","EmojiWrapper","IntroLayout_templateObject2","Emoji","span","IntroLayout_templateObject3","IntroLayout","foodCopy","Object","toConsumableArray","data","foods","forEach","food","push","map","index","key","role","aria-label","emoji","Molecules_IntroCard_IntroCard","socket","socketIOClient","useWebsockets","_useState","useState","_useState2","slicedToArray","link","setLink","_useState3","_useState4","foodCount","setFoodCount","_useState5","_useState6","userId","setUserId","_useState7","_useState8","sessionId","setSessionId","_useState9","_useState10","error","setError","useEffect","window","location","urlContents","split","length","emit","on","newLink","_ref2","count","setTimeout","addFood","EmojiButton","EmojiSelector_templateObject","isSelected","EmojiSelector","name","title","ul","EmojiLayout_templateObject","EmojiLayout","selections","EmojiLayout_Wrapper","Atoms_EmojiSelector_EmojiSelector","some","selection","Link_templateObject","LinkText","label","Link_templateObject2","LinkInput","input","Link_templateObject3","CopyButton","Link_templateObject4","Link","copied","setCopied","ClipboardJS","text","Link_Wrapper","htmlFor","value","readOnly","className","StyledButton","Button_templateObject","isShaking","Button","children","Subtitle","h2","CompareModal_templateObject","CompareModal","foodData","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","keys","_foodCount$key$obj","obj","filter","sort","b","reverse","extractDataFromFood","es","options","legend","display","scales","xAxes","ticks","beginAtZero","yAxes","fontSize","Atoms_Button_Button","defaultProps","StyledNotification","Notification_templateObject","Notification","Fragment","MainLayout_templateObject","TopWrapper","MainLayout_templateObject2","InfoWrapper","MainLayout_templateObject3","BottomWrapper","MainLayout_templateObject4","MainLayout","setSelections","position","setPosition","compared","setCompared","_useWebsockets","_useWebsockets2","_useWebsockets2$","MainLayout_Wrapper","Atoms_Notification_Notification","Atoms_Link_Link","Molecules_EmojiLayout_EmojiLayout","oldSelections","splice","prevPosition","Molecules_CompareModal_CompareModal","App","started","setStarted","pathname","includes","Organisms_MainLayout_MainLayout","Organisms_IntroLayout_IntroLayout","search","history","replaceState","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9ccf356.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nconst Title = styled.h1`\n  font-size: ${props => props.size ? props.size + \"rem\" : \"2rem\"};\n  font-weight: 300;\n  color: ${props => props.color ? props.color : \"black\"}\n`\n\nexport default Title\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport { Title } from \"components/Atoms/Title\"\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  background: rgba(239,121,138, 0.9);\n  text-align: center;\n  border-radius: 4px;\n\n  & > h1 {\n    margin-bottom: 0;\n  }\n`\n\nconst CardSubtitle = styled.p`\n  color: white;\n  font-weight: 300;\n  font-size: 2rem;\n  margin: 0;\n`\n\nconst CardTwitter = styled.p`\n  color: white;\n  margin: 0;\n  font-size: 0.875rem;\n\n  & > a {\n    color: white;\n    font-weight: bold;\n    text-decoration: none;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`\n\nconst StartButton = styled.button`\n  border: 1px solid white;\n  border-radius: 4px;\n  background-color: transparent;\n  color: white;\n  font-size: 1.5rem;\n  margin: 3.125rem 1rem 1rem 1rem;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline-color: #E2DFE0;\n  }\n`\n\nconst IntroCard = ({ onClick }) => {\n  return (\n    <CardWrapper>\n      <Title color=\"white\" size=\"3\">\n        Food Picker\n      </Title>\n\n      <CardSubtitle>\n        Argue less, eat more\n      </CardSubtitle>\n\n      <StartButton onClick={onClick}>\n        Let's go !\n      </StartButton>\n\n      <CardTwitter>\n        Made by <a href=\"http://twitter.com/christo_kade\">@christo_kade</a>\n      </CardTwitter>\n    </CardWrapper>\n  )\n}\n\nIntroCard.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default IntroCard\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { IntroCard } from \"components/Molecules/IntroCard\"\nimport data from \"data/food.json\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(7, 1fr);\n  align-items: center;\n  justify-items: center;\n  overflow: hidden;\n`\n\nconst Emoji = styled.span`\n  font-size: 3rem;\n  display: inline-block;\n  animation: scroll 20s infinite linear;\n\n  @keyframes scroll {\n    0% {\n      transform: translateY(0px)\n    }\n    50% {\n      transform: translateY(-500px)\n    }\n    100% {\n      transform: translateY(0px)\n    }\n  }\n`\n\nconst IntroLayout = ({ onClick }) => {\n  const foodCopy = [...data.foods]\n\n  // Add some more emojis to the mix\n  foodCopy.forEach(food => {\n    foodCopy.push(food)\n  })\n\n  return (\n    <Wrapper>\n      <EmojiWrapper>\n        {foodCopy.map((food, index) => <Emoji key={index} role=\"img\" aria-label=\"\">{food.emoji}</Emoji>)}\n      </EmojiWrapper>\n      <IntroCard onClick={onClick} />\n    </Wrapper>\n  )\n}\n\nexport default IntroLayout\n","import { useState, useEffect } from \"react\"\nimport socketIOClient from \"socket.io-client\";\n\nconst socket = socketIOClient(\"https://fastfood-webapp.herokuapp.com/\");\n\n/* eslint-disable */\nconst useWebsockets = () => {\n  const [link, setLink] = useState(\"Fetching link...\")\n  const [foodCount, setFoodCount] = useState()\n  const [userId, setUserId] = useState()\n  const [sessionId, setSessionId] = useState()\n  const [error, setError] = useState()\n\n  // Check if a session exists, if so join it\n  // If not, create one and display its link\n  useEffect(() => {\n    // Check if the URL contains a session ID\n    let { href } = window.location\n    const urlContents = href.split(\"/\")\n    const sessionId = urlContents[urlContents.length - 1]\n\n    if (sessionId === \"\") {\n      socket.emit(\"first-client\")\n      socket.on(\"new-session\", ({ sessionId }) => {\n        let newLink = href += sessionId\n        setUserId(0)\n        setSessionId(sessionId)\n        setLink(newLink)\n      });\n    } else {\n      socket.emit(\"join-session\", sessionId)\n      socket.on(\"session-joined\", ({ userId }) => {\n        setUserId(userId)\n        setSessionId(sessionId)\n        setLink(href)\n      })\n    }\n  }, [])\n\n  const addFood = (food, sessionId, userId) => {\n    socket.emit(\"add-food\", food, sessionId, userId)\n  }\n\n  socket.on(\"food-count-update\", (count) => {\n    setFoodCount(count)\n  })\n\n  /**\n   * On error, store its message and remove it after 3 seconds\n   */\n  socket.on(\"err\", (error) => {\n    setError(error)\n\n    setTimeout(() => {\n      setError(null)\n    }, 3000)\n  })\n\n  return [{ link, userId, sessionId, foodCount, error }, { addFood }]\n}\n\nexport default useWebsockets\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst EmojiButton = styled.button`\n  background: rgba(255,255,255, 0.5);\n  text-align: center;\n  padding: 1.5rem;\n  font-size: 1.5rem;\n  border: ${props => props.isSelected ? \"1px solid red\" : \"1px solid white\"};\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: 1px solid #EF798A;\n  }\n\n  @media (max-width: 1280px) {\n    padding: 0.5rem;\n  }\n`\n\nconst EmojiSelector = ({ name, emoji, onClick, isSelected }) => {\n  return (\n    <EmojiButton onClick={() => onClick(name, emoji)} title={name} isSelected={isSelected}>\n      <span role=\"img\" aria-label={name}>{emoji}</span>\n    </EmojiButton>\n  )\n}\n\nEmojiSelector.propTypes = {\n  name: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default EmojiSelector\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\"\n\nimport { EmojiSelector } from \"components/Atoms/EmojiSelector\"\nimport data from \"data/food.json\"\n\nconst Wrapper = styled.ul`\n  display: grid;\n\tgrid-gap: 10px;\n\tgrid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  grid-auto-flow: dense;\n  margin: 0;\n  padding: 0;\n`\n\nconst EmojiLayout = ({ onClick, selections }) => {\n  return (\n    <Wrapper>\n      {data.foods.map(food =>\n        <EmojiSelector\n          name={food.name}\n          emoji={food.emoji}\n          key={food.name}\n          onClick={onClick}\n          isSelected={selections.some(selection => selection.name === food.name)}\n        />)}\n    </Wrapper>\n  )\n}\n\nEmojiLayout.propTypes = {\n  onClick: PropTypes.func,\n  selections: PropTypes.array\n}\n\nexport default EmojiLayout\n","import React, { useEffect, useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport ClipboardJS from \"clipboard\"\n\nconst Wrapper = styled.div`\n  padding: 1rem;\n  text-align: center;\n  border-radius: 4px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`\n\nconst LinkText = styled.label`\n  margin-right: 1rem;\n`\n\nconst LinkInput = styled.input`\n  background-color: white;\n  font-size: 1.5rem;\n  border-radius: 4px;\n  border: 1px solid white;\n  padding: 0.25rem;\n  background-color: #EF798A;\n  color: white;\n  box-sizing: content-box;\n  width: 30vw;\n\n  &:focus {\n    outline: transparent;\n  }\n\n  @media (max-width: 769px) {\n    font-size: 1rem;\n    width: 100%;\n  }\n`\n\nconst CopyButton = styled.span`\n  font-size: 1.5rem;\n  margin-left: 0.5rem;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst Link = ({ link }) => {\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    const clipboard = new ClipboardJS(\".copy-button\", {\n      text() {\n        return link\n      },\n    })\n\n    clipboard.on(\"success\", () => {\n      setCopied(true)\n    })\n  }, [link])\n\n  return (\n    <Wrapper>\n      <LinkText htmlFor=\"link\">Invite anyone to this session with this link:</LinkText>\n      <LinkInput name=\"link\" value={link} readOnly />\n      <CopyButton role=\"img\" aria-label=\"copy to clipboard\" className=\"copy-button\">\n        {copied ? \"✅\" : \"📋\"}\n      </CopyButton>\n    </Wrapper>\n  )\n}\n\nLink.propTypes = {\n  link: PropTypes.string.isRequired\n}\n\nexport default Link\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\"\n\nconst StyledButton = styled.button`\n  padding: 1rem;\n  font-size: 1.5rem;\n  background-color: white;\n  border: 1px solid #EF798A;\n  margin: 0.5rem;\n  animation: ${props => props.isShaking ? \"shake 0.82s cubic-bezier(.36,.07,.19,.97) both\" : \"none\"};\n\n  & > span {\n    font-size: 1.5rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n\n  @keyframes shake {\n    10%, 90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n\n    20%, 80% {\n      transform: translate3d(2px, 0, 0);\n    }\n\n    30%, 50%, 70% {\n      transform: translate3d(-4px, 0, 0);\n    }\n\n    40%, 60% {\n      transform: translate3d(4px, 0, 0);\n    }\n}\n`\n\nconst Button = ({ children, onClick, isShaking }) => {\n  return (\n    <StyledButton onClick={onClick} isShaking={isShaking}>\n      {children}\n    </StyledButton>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  isShaking: PropTypes.bool\n}\n\nexport default Button\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport { HorizontalBar } from \"react-chartjs-2\"\n\nimport \"./CompareModal.css\"\nimport { Button } from \"components/Atoms/Button\"\nimport { Title } from \"components/Atoms/Title\"\n\nconst Subtitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 300;\n`\n\n/**\n * Sort and clean the food array\n * @param {*} foodCount\n */\nconst extractDataFromFood = (foodCount) => {\n  const labels = []\n\n  const datasets = [\n    {\n      label: 'Food choices',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: []\n    }\n  ]\n\n  const keys = Object.keys(foodCount)\n\n  keys.map(key => {\n    if (key === \"\") return null\n\n    const { name, emoji } = foodCount[key].obj\n    return {\n      name,\n      emoji,\n      count: foodCount[key].count\n    }\n  })\n    .filter(food => food)\n    .sort((a, b) => a.count - b.count)\n    .reverse()\n    .forEach(({ name, emoji, count }) => {\n      labels.push(emoji)\n      datasets[0].data.push(count)\n    })\n\n  return {\n    labels,\n    datasets\n  }\n}\n\nconst CompareModal = ({ count, onClick }) => {\n  let foodData = extractDataFromFood(count)\n\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          fontSize: 30\n        }\n      }]\n    }\n  }\n\n  return (\n    <details-dialog>\n      <Title>Vote count</Title>\n      {\n        foodData.labels.length > 0 ?\n          <HorizontalBar\n            data={foodData}\n            options={options}\n          /> :\n          <Subtitle>\n            It seems like nobody has picked any food yet ! <span role=\"img\" aria-label=\"\">🤷‍♂</span>️\n          </Subtitle>\n      }\n      <Button onClick={onClick}>Close</Button>\n    </details-dialog>\n  )\n}\n\nCompareModal.propTypes = {\n  count: PropTypes.object,\n  onClick: PropTypes.func.isRequired,\n}\n\nCompareModal.defaultProps = {\n  count: {},\n}\n\nexport default CompareModal\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\"\n\nconst StyledNotification = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  background-color: #D52941;\n  padding: 1rem;\n  border-radius: 4px;\n  color: white;\n`\n\nconst Notification = ({ error }) => {\n  return (\n    <>\n      {\n        error ?\n          <StyledNotification>\n            {error}\n          </StyledNotification > : null\n      }\n    </>\n  )\n}\n\nNotification.propTypes = {\n  error: PropTypes.string\n}\n\nexport default Notification\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\n\nimport useWebsockets from \"hooks/useWebsockets\"\nimport { EmojiLayout } from \"components/Molecules/EmojiLayout\"\nimport { Link } from \"components/Atoms/Link\"\nimport { Button } from \"components/Atoms/Button\"\nimport { CompareModal } from \"components/Molecules/CompareModal\"\nimport { Notification } from \"components/Atoms/Notification\"\nimport { Title } from \"components/Atoms/Title\"\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst TopWrapper = styled.div`\n  padding: 5rem 10rem;\n\n  @media (max-width: 1281px) {\n    padding: 2rem 10rem;\n  }\n\n  @media (max-width: 1024px) {\n    padding-bottom: 10rem;\n  }\n\n  @media (max-width: 769px) {\n    padding: 2rem 1rem 10rem 1rem;\n  }\n`\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: 1024px) {\n    display: inline-block;\n    text-align: center;\n  }\n`\n\nconst BottomWrapper = styled.div`\n  width: 100%;\n  bottom: 0;\n  text-align: center;\n  position: fixed;\n  bottom: 0.625rem;\n`\n\nconst MainLayout = () => {\n  const [selections, setSelections] = useState([])\n  const [position, setPosition] = useState(0)\n  const [compared, setCompared] = useState(false)\n  const [{ link, sessionId, userId, foodCount, error }, { addFood }] = useWebsockets()\n\n  /**\n   * On food click, add an item to our selection array\n   * If the array is full, reset it\n   * @param {*} name\n   * @param {*} emoji\n   */\n  const handleEmoijiClick = (name, emoji) => {\n    setSelections((oldSelections) => {\n      oldSelections.splice(position, 1, { name, emoji })\n      addFood([...oldSelections], sessionId, userId)\n\n      // When we have reached the maximum number of items, go back to 0, otherwise move to the next one\n      position >= 3 ? setPosition(0) : setPosition(prevPosition => prevPosition + 1)\n\n      return [...oldSelections]\n    })\n  }\n\n  return (\n    <Wrapper>\n      <Notification error={error} />\n\n      <TopWrapper>\n        <InfoWrapper>\n          <Title size=\"1.5\">Pick up to 4 types of food</Title>\n          <Link link={link} />\n        </InfoWrapper>\n\n        <EmojiLayout onClick={handleEmoijiClick} selections={selections} />\n      </TopWrapper>\n\n      <BottomWrapper>\n        <Button onClick={() => setCompared(true)} isShaking={selections.length === 4}>\n          See results\n        </Button>\n      </BottomWrapper>\n\n      {compared ? <CompareModal count={foodCount} onClick={() => setCompared(false)} /> : null}\n    </Wrapper>\n  )\n}\n\nexport default MainLayout\n","import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport { IntroLayout } from \"./components/Organisms/IntroLayout\"\nimport { MainLayout } from \"./components/Organisms/MainLayout\"\n\nconst App = () => {\n  const [started, setStarted] = useState(false)\n\n  /**\n   * On launch, check if the user is coming from a referal URL\n   */\n  useEffect(() => {\n    const { pathname } = window.location\n\n    // The user isn't coming from a referal link, keep them here\n    if (pathname === \"/\" || pathname.includes(\"producthunt\")) return\n\n    // They are, launch the application\n    setStarted(true)\n  }, [])\n\n  const launch = () => {\n    // Check if the URL contains a product hunt search query\n    // If so, remove it on launch\n    if (window.location.search) {\n      window.history.replaceState(null, null, window.location.pathname);\n    }\n\n    setStarted(true)\n  }\n\n  return (\n    <>\n      {\n        !started ?\n          <IntroLayout onClick={launch} />\n          : <MainLayout />\n      }\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}